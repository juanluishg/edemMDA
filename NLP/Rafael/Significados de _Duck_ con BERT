{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Significados de \"Duck\" con BERT","provenance":[{"file_id":"1rbhuZYjMGezLJmpzc9p8T38gXqILTHt_","timestamp":1610543057766}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"El1iz6fT7vl6"},"source":["# Identifying meanings using BERT\n","Identifying the different meanings of the word 'duck' using BERT embeddings\n","\n","BLOG: https://towardsdatascience.com/identifying-the-right-meaning-of-the-words-using-bert-817eef2ac1f0\n"]},{"cell_type":"code","metadata":{"id":"zv1liDwAmGfR"},"source":["!pip install -e git+https://github.com/negedng/bert-embedding#egg=bert_embedding"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RAfeBLY-FCAO"},"source":["Import python resources"]},{"cell_type":"code","metadata":{"id":"V4re6bbpEqE_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610543175020,"user_tz":-60,"elapsed":5324,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"dea0cfd7-c39d-4265-a33b-c64ced91a035"},"source":["import pandas as pd\n","import numpy as np\n","\n","from sklearn.decomposition import PCA\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.model_selection import LeaveOneOut\n","from sklearn import model_selection\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Obtaining bert_embedding from git+https://github.com/negedng/bert-embedding#egg=bert_embedding\n","  Updating ./src/bert-embedding clone\n","  Running command git fetch -q --tags\n","  Running command git reset --hard -q 32fb23a1398f824aea7c7c9e6ec89843dc7d0c91\n","Requirement already satisfied: typing>=3.6.6 in /usr/local/lib/python3.6/dist-packages (from bert_embedding) (3.7.4.3)\n","Requirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.6/dist-packages (from bert_embedding) (1.19.5)\n","Requirement already satisfied: mxnet>=1.4.0 in /usr/local/lib/python3.6/dist-packages (from bert_embedding) (1.7.0.post1)\n","Requirement already satisfied: gluonnlp>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from bert_embedding) (0.10.0)\n","Requirement already satisfied: graphviz<0.9.0,>=0.8.1 in /usr/local/lib/python3.6/dist-packages (from mxnet>=1.4.0->bert_embedding) (0.8.4)\n","Requirement already satisfied: requests<3,>=2.20.0 in /usr/local/lib/python3.6/dist-packages (from mxnet>=1.4.0->bert_embedding) (2.23.0)\n","Requirement already satisfied: cython in /usr/local/lib/python3.6/dist-packages (from gluonnlp>=0.6.0->bert_embedding) (0.29.21)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from gluonnlp>=0.6.0->bert_embedding) (20.8)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.20.0->mxnet>=1.4.0->bert_embedding) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.20.0->mxnet>=1.4.0->bert_embedding) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.20.0->mxnet>=1.4.0->bert_embedding) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.20.0->mxnet>=1.4.0->bert_embedding) (2.10)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from packaging->gluonnlp>=0.6.0->bert_embedding) (2.4.7)\n","Installing collected packages: bert-embedding\n","  Found existing installation: bert-embedding 1.0.1\n","    Can't uninstall 'bert-embedding'. No files were found to uninstall.\n","  Running setup.py develop for bert-embedding\n","Successfully installed bert-embedding\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"oKEMfVfzFHRo"},"source":["Load csv from GitHub"]},{"cell_type":"code","metadata":{"id":"Uo5eAFGVExF_"},"source":["url = \"https://gist.githubusercontent.com/negedng/91c4cb1335a4b2bbc3fcf7aba3c6ecda/raw/3fc0b641caa95ebba986b1313522f59ecd757a2b/ducks2019type3.csv\"\n","df1 = pd.read_csv(url)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4NUDw0hNE9PV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610543205175,"user_tz":-60,"elapsed":21704,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"08c0a407-a2a8-4370-dd96-34176295f410"},"source":["from bert_embedding import BertEmbedding\n","bert_embedding = BertEmbedding(max_seq_length=35)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Vocab file is not found. Downloading.\n","Downloading /root/.mxnet/models/8904431092636726601/8904431092636726601_book_corpus_wiki_en_uncased-a6607397.zip from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/dataset/vocab/book_corpus_wiki_en_uncased-a6607397.zip...\n","Downloading /root/.mxnet/models/bert_12_768_12_book_corpus_wiki_en_uncased-75cc780f.zip7bdeb67f-5bc0-427f-9214-1b26b2efa062 from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/models/bert_12_768_12_book_corpus_wiki_en_uncased-75cc780f.zip...\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"N2Mtf0GM35Qx"},"source":["Generate BERT embedding for every token of every sentence"]},{"cell_type":"code","metadata":{"id":"sdQmyzDVGEYh"},"source":["embs = bert_embedding(df1['Sentence'], filter_spec_tokens=False,)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5A-GLbfY4Bed"},"source":["Select the 'duck' embeddings"]},{"cell_type":"code","metadata":{"id":"eyeroYq6G224"},"source":["duck_embs = []\n","for row in embs:\n","    try:\n","        duck_index = row[0].index('duck')\n","        duck_embs.append(row[1][duck_index])\n","    except ValueError:\n","        print(len(row[0]))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BuvvM2sTG79-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610543325355,"user_tz":-60,"elapsed":563,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"ce2d89f3-bf9e-4503-f1d3-7a04890f9a87"},"source":["duck_embs = np.array(duck_embs)\n","duck_embs.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(77, 768)"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"wVYuHD0z4fsv"},"source":["PCA projection to 2D"]},{"cell_type":"code","metadata":{"id":"SgIYuACzRB91","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610543329873,"user_tz":-60,"elapsed":530,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"7f732d09-3bcc-4cdd-841a-300d3fdcf2d0"},"source":["duck_pca = PCA(n_components=2).fit_transform(duck_embs)\n","duck_pca.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(77, 2)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"SKJ9sc_C4i8W"},"source":["Plot the results (group to classes)"]},{"cell_type":"code","metadata":{"id":"tcZmqWVNRiI6","colab":{"base_uri":"https://localhost:8080/","height":428},"executionInfo":{"status":"ok","timestamp":1610543343288,"user_tz":-60,"elapsed":864,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"4740a9b4-996c-4a3f-bbf7-01673f01ebfa"},"source":["cdict = {0: 'red', 1: 'blue', 2: 'green'}\n","markers = {0: 'o', 1: '+', 2: 'v'}\n","labels = {0: 'bird', 1: 'verb', 2: 'fabric'}\n","\n","scatter_x = duck_pca[:,0]\n","scatter_y = duck_pca[:,1]\n","fig, ax = plt.subplots(figsize=(10, 7))\n","for g in np.unique(df1.Type):\n","    ix = np.where(df1.Type == g)\n","    ax.scatter(scatter_x[ix], scatter_y[ix], c = cdict[g], label = labels[g], s=100, marker=markers[g])\n","ax.legend(prop={'size': 12})\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"42AR9lIX3Zl9","executionInfo":{"status":"ok","timestamp":1610543484560,"user_tz":-60,"elapsed":1505,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"3dd53536-4850-4978-f354-cb9e07a9347d"},"source":["from sklearn.manifold import TSNE\n","\n","duck_tsne = TSNE(n_components=2).fit_transform(duck_embs)\n","\n","cdict = {0: 'red', 1: 'blue', 2: 'green'}\n","markers = {0: 'o', 1: '+', 2: 'v'}\n","labels = {0: 'bird', 1: 'verb', 2: 'fabric'}\n","\n","scatter_x = duck_tsne[:,0]\n","scatter_y = duck_tsne[:,1]\n","fig, ax = plt.subplots(figsize=(10, 7))\n","for g in np.unique(df1.Type):\n","    ix = np.where(df1.Type == g)\n","    ax.scatter(scatter_x[ix], scatter_y[ix], c = cdict[g], label = labels[g], s=100, marker=markers[g])\n","ax.legend(prop={'size': 12})\n","plt.show()\n","\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x504 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"NhFk1URs7fem"},"source":["Evaluate a k-NN (k-Nearest Neighbour Classifier) model with LOOCV (Leave One Out Cross-Validation)"]},{"cell_type":"code","metadata":{"id":"51S5Bl6DRkSa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610543515173,"user_tz":-60,"elapsed":1138,"user":{"displayName":"Rafael Berlanga Llavori","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gij7a_x7hln_mccXdSKtg2BpPtMu66FEoe7m3u32g=s64","userId":"05947012679519155640"}},"outputId":"10fb3d78-cc2e-4a88-e7f5-9ebcda892c4c"},"source":["loocv = model_selection.LeaveOneOut()\n","model = KNeighborsClassifier(n_neighbors=8)\n","results = model_selection.cross_val_score(model, duck_embs, df1.Type, cv=loocv)\n","print(\"Accuracy: %.3f%% (STDev %.3f%%)\" % (results.mean()*100.0, results.std()*100.0))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 92.208% (STDev 26.805%)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gIbC_hzB5M-D"},"source":[""],"execution_count":null,"outputs":[]}]}